[
    {
        "title": "MNIST Handwritten Digit Recognition App",
        "description" : "Building a simple Neural Network to recognize handwritten digits from the MNIST dataset using PyTorch. Deployed the model, then built a simple web app to interact with the model.",
        "www":{
            "what":"A web-app that allows user to draw a handwritten digit on a canvas. The app sends the image to a deployed PyTorch model, which predicts the digit, and returns the prediction to the user.",
            "why":"To learn not just about building a neural network, but also how to deploy it.",
            "who":"Just me."
        },
        "what_i_learnt": [
            "I wanted a quick refresher on the steps to build a neural network with PyTorch. So I went back to the basics + what I learnt in Uni, and built a simple neural network to recognize handwritten digits from the MNIST dataset.", 
            "The building of the neural network was pretty straightforward (code-wise), partly because my knowledge limits me to build a simple feedforward neural network. But I realized that I was forgetting the mathematical concepts behind it (like backpropagation and loss functions). Which is why I wanted to build this project, to refresh my memory.",
            "I also wanted to learn how to deploy the model. Right now it's running on Railway, (which frustratingly took so much time to debug because the deployment keeps failing cause of image size etc.) In the end, had to learn how to use docker to containerize the model, and then deploy it on Railway. Which was how I learnt about Docker caching: deployment wouldn't build from scratch every time, but only the files that changed.",
            "For frontend, I used React to build a simple web app that allows user to draw a handwritten digit on a canvas. The app sends the image to the deployed PyTorch model, which predicts the digit, and returns the prediction to the user. BUT, I discovered that the canvas MUST be white strokes on a black background, otherwise the model will not be able to recognize the digit (obvious, but I did not realize). So I had to add a feature to convert the image to black and white, before sending it to the model."
        ],
        "impact" :["Coming Soon"
        ],
        "image": "/frontend/src/assets/project_images/my_website.jpg",
        "url": {"github": "https://github.com/izack8/handwritten-numbers", 
        "link": "https://handwritten-digits.izack.dev"},
        "year": 2025,
        "technologies": [{
            "name": "JavaScript",
            "icon": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-original.svg"
        }, {
            "name": "Python",
            "icon": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/python/python-original.svg"
        }, {
            "name": "FastAPI",
            "icon": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/fastapi/fastapi-original.svg"
        },{
            "name": "React",
            "icon": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/react/react-original.svg"
        }, {
            "name": "Tailwind CSS",
            "icon": "/icons/Tailwind_CSS_Logo.png"
        }]
    },{
        "title": "Portfolio Website",
        "description" : "Building my own website, using HTML, CSS, JS, Python, and FastAPI (and gradually more frameworks as I learn more). I'm trying to constantly update this website with stuff I learnt, so checkback to see if you can spot any changes!",
        "www":{
            "what":"A portfolio website to showcase my projects, experiences, and skills.",
            "why":"I wanted to learn and experience the process of building a website from scratch, without using online Web Building tools like Wix or WordPress.",
            "who":"Recruiters to see my projects, experiences, and skills. Also for myself to learn and experience the process of building a website from scratch."
        },
        "what_i_learnt": [
            "A LOT. LOL", 
            "I got so annoyed with basic HTML & CSS, that I decided to learn React and Tailwind CSS, which is what you're seeing right now.",
            "Also learnt how to design APIs (though I don't really have to use it here. Maybe database in the future?)",
            "I also learnt how to deploy my website on the cloud, firstly using Azure. Then it got a little expensive to host, so I had to find cheaper options like Vercel (free) and Railway (free for a certain time).",
            "VCS! How to branch properly (feat/* and fix/*), pull, push, commit, merge, rebase, etc. Very important!!!"
        ],
        "impact" :["Basically learnt A LOT (CORS, how to deploy on cloud, how backend interacts with frontend, HTML templating.",
        "Newfound knowledge of React, JS, deployment and VCS.",
        "Just helped me understand why certain things are done in a certain way, which I feel is the best way to learn anything.",
        "Hope you like this enough to hire me(jk, but seriously, I hope you like it)."
        ],
        "image": "/frontend/src/assets/project_images/my_website.jpg",
        "url": {"github": "https://github.com/izack8/caasi", "link": "https://izack.dev"},
        "year": 2025,
        "technologies": [{
            "name": "JavaScript",
            "icon": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-original.svg"
        }, {
            "name": "Python",
            "icon": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/python/python-original.svg"
        }, {
            "name": "FastAPI",
            "icon": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/fastapi/fastapi-original.svg"
        },{
            "name": "React",
            "icon": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/react/react-original.svg"
        }, {
            "name": "Tailwind CSS",
            "icon": "/icons/Tailwind_CSS_Logo.png"
        },
        {
            "name": "Hugging Face",
            "icon": "/icons/hf-logo.svg"
        }, {
            "name": "Torch",
            "icon": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/pytorch/pytorch-original.svg"
        }]
    },{
        "title": "Codebot",
        "description" : "School assigned capstone project, to study the performance between fine-tuning and Retrieval-Augmented Generation (RAG), whilst building a chatbot.",
        "www":{
            "what":"A chatbot that replicates the functionality of ChatGPT, but an additional layer of RAG is used to retrieve code snippets and explanations from a dataset of code snippets and explanations.",
            "why":"In a paper, it was shown that LLMs at that time (GPT-3) tends to hallucinate code snippets. One such instance was when it hallucinated a non-existent library from python, instead of saying it doesn't know. I wanted to see if fine-tuning the model on a dataset of code snippets and explanations, would help reduce the hallucination rate, as compared to RAG.",
            "who":"Students/Researchers who wants a free and open-source alternative to ChatGPT, that can help them with coding."
        },
        "what_i_learnt": [
            "This was my first project working with LLMs. As all beginners, it was a very exciting (but also frustrating) journey.",
            "Following the popularity of ChatGPT, I was really fasincated by the capabilities of AI & LLMs. I wanted to create my own chatbot that can help people with coding problems.",
            "This was the point where I first discovered open-source LLMs, and I was really excited to try them out. I used the GPT-2 model, and I was amazed by how well it could generate code snippets- though of course GPT-3 was wayyyyy better.",
            "I also learned how to use the Hugging Face Transformers library, and how to fine-tune the model on my own dataset. I created a dataset of code snippets and explanations, and I fine-tuned the model on it.",
            "(In hindsight, and knowing what I know now, wow- I learnt so much since then!)"
        ],
        "impact" :["Reduced the hallucination rate of code snippets generated by the model, ensuring that the model responds with accurate and relevant code snippets.",
        "Provided a free and open-source alternative to ChatGPT, that can help people with coding problems."
        ],
        "image": "/frontend/src/assets/project_images/llm_icon.jpg",
        "url": {
            "github": "https://github.com/izack8/codebot",
            "link": "No link for this >.<"
        },
        "year": 2023,
        "technologies": [{
            "name": "Python",
            "icon": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/python/python-original.svg"
        }, {
            "name": "Hugging Face",
            "icon": "/icons/hf-logo.svg"
        }, {
            "name": "Torch",
            "icon": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/pytorch/pytorch-original.svg"
        },
        {
            "name": "Streamlit",
            "icon": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/streamlit/streamlit-original.svg"
        }]
    },
    {
        "title": "Nanyang Marche",
        "description" : "An app designed to help NTU students connect with each other, through online forums + a marketplace for students to buy and sell items.",
        "www":{
            "what":"An app designed to help NTU students connect with each other, through online forums, and a marketplace for students to buy and sell items.",
            "why":"One problem I observed in NTU's hall culture, is that students usually have a lot of furniture and items that they no longer need, but they don't know how to get rid of them. So they just throw them away, which is a waste of resources. Hence, I wanted to create a marketplace for students to buy and sell, and also hopefully cultivating a new culture of trading within NTU students.",
            "who":"NTU students."
        },
        "what_i_learnt": [
            "App design. The storyboarding, wireframing, tying everything together- from backend to frontend. How can these files interact with each other, especially with a language I'm not familiar with (Dart).",
            "To actually read documentation, and not just copy-paste code from the internet. I had to read the Flutter documentation to understand how to use the widgets (and back then it was not as well-documented as it is now)."
        ],
        "impact" :["Though the app did not go through production, it was defintely a great learning experience for me, trying to balance building an app + juggling other school work."],
        
        "image": "/frontend/src/assets/project_images/nanyang_marche.png",
        "url": {
            "github": "https://github.com/izack8/nanyang_marche/blob/master/Nanyang_Marche_Report.pdf",
            "link": "No link for this >.<"
        },
        "year": 2023,
        "technologies": [{
            "name": "Flutter",
            "icon": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/flutter/flutter-original.svg"
        }, {
            "name": "Dart",
            "icon": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/dart/dart-original.svg"
        }, {
            "name": "Firebase",
            "icon": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/firebase/firebase-plain.svg"
        }]
    },
    {
        "title": "STARs Automation for module selection",
        "description": "Automating the module selection process for NTU students (just myself, ngl).",
        "www": {
            "what": "Automating the module selection process for NTU students (just myself, ngl).",
            "why": "I wanted to automate the module selection process for NTU students, because the system is so painful to use.",
            "who": "NTU students."
        },
        "what_i_learnt": [
            "OK so if you're from NTU, then you know how HORRIBLE the STARs system is. Context for non-NTU students, we have a frigging painful system for customizing our time-tables + modules selection every semester. It's basically fastest fingers first, BUT the system crashes every time, or your internet lags behind or something. It's a MESS.",
            "So once you get into the system, you have to get to the module selection page, and then you have to click module, and then you have to click through like 5654984 more buttons to confirm the selection. And then you have to do this for every module you want to select.",
            "Anyways, I got fed up with the tireless clicking (cause it's literally the same buttons you have to click every time), so I decided to automate it, and let it run in the background while I do OTHER IMPORTANT THINGS.",
            "It was on my Mac, so I used AppleScript to automate some keyboard presses (like \"Tab\" and \"Enter\"), on my MacBook Air M2. (so hmu if you need the simple script)"
        ],
        "impact": ["Reduced the time taken to select modules, by automating the process.",
        "Helped NTU students select their modules faster and more efficiently."],
        "image": "/frontend/src/assets/project_images/apple_script.png",
        "url": {
            "github": "No link for this >.<",
            "link": "No link for this >.<"
        },
        "year": 2023,
        "technologies": [{
            "name": "AppleScript",
            "icon": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/applescript/applescript-original.svg"
        }, {
            "name": "MacOS",
            "icon": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/apple/apple-original.svg"
        }]
    }
]